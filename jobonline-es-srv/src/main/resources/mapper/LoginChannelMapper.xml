<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobtbao.oauth.srv.qrcode.dao.LoginChannelDao">

	<select id="get" resultType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO"  parameterType="long">
		select `id`,`uid`,`type`,`channel`,`channel`,`create_time`,`bind_time` from login_channel where id = #{id}
	</select>
	
	<select id="getEcardInfo" resultType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO"  parameterType="com.jobtbao.oauth.srv.qrcode.bean.EsscInfo">
		 select lc.id,lc.`name`,lc.`sex`,lc.`birth_day` birthDay,au.phone  from login_channel lc left join apply_user au on lc.uid=au.id
		 where uid is not null 
	  	  <if test="esscNo != null and esscNo != ''"> and channel_uniqe_code = #{esscNo} </if>
		  <if test="type != null and type != ''"> and lc.type = #{type} </if>
		  <if test="uid != null and uid != ''"> and lc.uid = #{uid} </if>
		  limit 1
	</select>
	

	<select id="list" resultType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO">
		select `id`,`uid`,`type`,`name`,`id_card` as idCard,`channel`,`channel_uniqe_code`,`create_time`,`bind_time` from login_channel
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uid != null and uid != ''"> and uid = #{uid} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="channelType != null and channelType != ''"> and channel_type = #{channelType} </if>
		  		  <if test="channelUniqeCode != null and channelUniqeCode != ''"> and channel_uniqe_code = #{channelUniqeCode} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="bindTime != null and bindTime != ''"> and bind_time = #{bindTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from login_channel
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uid != null and uid != ''"> and uid = #{uid} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="channel != null and channel != ''"> and channel = #{channel} </if>
		  		  <if test="channelUniqeCode != null and channelUniqeCode != ''"> and channel_uniqe_code = #{channelUniqeCode} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="bindTime != null and bindTime != ''"> and bind_time = #{bindTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO" useGeneratedKeys="true" keyProperty="id">
		insert into login_channel
		(
			`id`,
			`uid`, 
			`type`, 
			`sex`, 
			`birth_day`, 
			`id_card`, 
			`card_number`,
			`name`, 
			`sign_no`,
			`ecard_phone`,
			`channel_type`, 
			`channel_uniqe_code`, 
			`create_time`, 
			`bind_time`
		)
		values
		(
			#{id},
			#{uid}, 
			#{type}, 
			#{sex}, 
			#{birthDay}, 
			#{idCard}, 
			#{cardNumber},
			#{name}, 
			#{signNo},
			#{ecardPhone}, 
			#{channelType},
			#{channelUniqeCode}, 
			#{createTime}, 
			#{bindTime}
		)
	</insert>

	<insert id="saveEssCard" parameterType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO" useGeneratedKeys="true" keyProperty="id">
		insert into login_channel
		(
			`id`,
			`uid`,
			`name`,
			`ecard_phone`,
			`channel_uniqe_code`,
			`create_time`,
			`bind_time`,
			`sign_no`,
			`sign_date`,
			`sign_level`,
			`card_number`,
			`id_card`,
			`sex`,
			`birth_day`,
			`channel_type`,
			`channel`,
			`area_code`,
			`area_name`
		)
		values
		(
			#{id},
			#{uid},
			#{name},
			#{ecardPhone},
			#{channelUniqeCode},
			#{createTime},
			#{bindTime},
			#{signNo},
			#{signDate},
			#{signLevel},
			#{cardNumber},
			#{idCard},
			#{sex},
			#{birthDay},
			#{channel},
			#{essChannel},
			#{areaCode},
			#{areaName}
		)
	</insert>

	<update id="updateSignLevel" parameterType="com.jobtbao.oauth.srv.qrcode.bean.LoginChannelDO">
		update login_channel
		<set>
			<if test="signLevel != null">`sign_level` = #{signLevel} </if>
		</set>
		where channel_uniqe_code = #{channelUniqeCode} and card_number = #{cardNumber} and `channel` = #{essChannel}
	</update>
	<select id="selectEssExist" resultType="java.lang.Long">
		select id from login_channel
		<where>
			<if test="channelUniqeCode != null and channelUniqeCode != ''"> channel_uniqe_code = #{channelUniqeCode} </if>
			<if test="cardNumber != null and cardNumber != ''"> and card_number = #{cardNumber} </if>
			<if test="essChannel != null and essChannel != ''"> and channel = #{essChannel} </if>
		</where>
	</select>

	<update id="bind" parameterType="com.jobtbao.oauth.srv.qrcode.bean.EcardInfo">
		update login_channel lc set bind_time=unix_timestamp(now()),uid=(select id from apply_user  au where au.phone=#{phone})
		where lc.channel_uniqe_code = #{esscNo} and channel=1 and type=#{type} limit 1;
	</update>
	
	<update id="bindHr" parameterType="com.jobtbao.oauth.srv.qrcode.bean.EcardBindInfo">
<!--     update login_channel lc set bind_time=unix_timestamp(now()),uid=(select id from hr_user hu where hu.phone=#{phone})  -->
<!--  	where lc.id= #{uid} and type=#{type} limit 1; -->
    update login_channel lc set bind_time=unix_timestamp(now()),uid=#{userId}
 	where lc.id= #{uid} and type=#{type} limit 1;
	</update>
	
	<update id="entroBind" parameterType="com.jobtbao.oauth.srv.qrcode.bean.EcardInfo">
<!-- 		update login_channel lc set bind_time=unix_timestamp(now()),uid=(select id from intro_user hu where hu.phone=#{phone}) -->
<!-- 		where lc.id = #{uid}  and type=#{type} limit 1; -->
		update login_channel lc set bind_time=unix_timestamp(now()),uid=#{userId}
		where lc.id = #{uid}  and type=#{type} limit 1;
	</update>
	
	<delete id="remove">
		delete from login_channel where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from login_channel where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>